name: 🌐 Deploy Website to Vercel

on:
  push:
    branches: [main]
    paths:
      - 'website/**'
      - 'README.md'
      - 'package.json'
      - 'packages/mcp-server/package.json'
  pull_request:
    branches: [main]
    paths:
      - 'website/**'
  workflow_dispatch:

jobs:
  deploy:
    name: 🚀 Deploy Website
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'website/package-lock.json'

      - name: Install dependencies
        working-directory: ./website
        run: npm ci

      - name: Sync documentation
        working-directory: ./website
        run: |
          node scripts/sync-docs.js
          echo "Documentation synced successfully"

      - name: Build website
        working-directory: ./website
        run: npm run build

      - name: Setup Vercel Project
        working-directory: ./website
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          mkdir -p .vercel
          echo '{"orgId":"team_qjAylPRWiD3YA7GeHMAD6UdN","projectId":"prj_J8TUOCkbwiLyYUunKBHK4h6pPS8x"}' > .vercel/project.json
          
      - name: Deploy to Vercel (Production)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: ./website
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npx vercel@latest --prod --token $VERCEL_TOKEN

      - name: Setup Vercel Project (Preview)
        if: github.event_name == 'pull_request'
        working-directory: ./website
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          mkdir -p .vercel
          echo '{"orgId":"team_qjAylPRWiD3YA7GeHMAD6UdN","projectId":"prj_J8TUOCkbwiLyYUunKBHK4h6pPS8x"}' > .vercel/project.json

      - name: Deploy to Vercel (Preview)
        if: github.event_name == 'pull_request'
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./website
          github-comment: true

  # Separate job for package updates (triggers doc sync)
  sync-on-package-update:
    name: 📚 Sync Documentation
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'chore(release)') || contains(github.event.head_commit.message, 'version bump')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'website/package-lock.json'

      - name: Install dependencies
        working-directory: ./website
        run: npm ci

      - name: Sync docs and deploy
        working-directory: ./website
        run: |
          node scripts/sync-docs.js
          npm run build

      - name: Setup Vercel Project (Sync)
        working-directory: ./website
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          mkdir -p .vercel
          echo '{"orgId":"team_qjAylPRWiD3YA7GeHMAD6UdN","projectId":"prj_J8TUOCkbwiLyYUunKBHK4h6pPS8x"}' > .vercel/project.json

      - name: Deploy updated docs
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./website
          vercel-args: '--prod'
